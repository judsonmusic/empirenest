// http://ionicframework.com/docs/v2/theming/
// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
html {
  height: 100%;
}

html,
body {
  color: #444444;
}

.bar-buttons{
  color: white !important;
}
modal-wrapper {
  position: absolute;
  width: 80%;
  height: 80%;
}

[c-padding]{
  padding: 16px;
}

@media (min-width: 992px) and (max-width: 1500px) {
  [col-sp-100]{
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 100%;
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
    width: 100%;
    max-width: 100%;
  }
}

@media not all and (min-height: 600px) and (min-width: 768px) {
  ion-modal ion-backdrop {
    visibility: hidden;
  }
}

@media only screen and (min-height: 0px) and (min-width: 0px) {
  .modal-wrapper {
    position: absolute;
    top: 10%;
    left: 10%;
    right: 10%;
    width: 80%;
    height: 80%;
  }
}

@media (max-width: 768px) {
  .modal-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100% !important;
    height: 100% !important;
    max-width: 1024px;
  }
}
.close-button{
  color: black;
  cursor: pointer;
  .ion-ios-close-outline:before{
    color: black;
  }
  .button-inner{
      background: white;
  }
}

ion-title {
  display: inline-block;
}

[text-center] {
  text-align: center;
}

[text-green] {
  color: green;
}

[text-red] {
  color: #881119
}

[float-right] {
  float: right;
}

[text-right] {
  text-align: right;
}

ion-select {
  width: 100%;
  max-width: 100%;
}

body {
  height: 100%;
  margin: 0;
  background-repeat: no-repeat;
  background-attachment: fixed;
}

ion-menu .fixed-content,
ion-menu button {
  background-color: #666 !important;
}

ion-menu .fixed-content,
button ion-label {
  color: white
}

.content {
  background: rgb(255, 255, 255);
  background: -moz-linear-gradient(top, rgba(255, 255, 255, 1) 0%, rgba(237, 237, 237, 1) 100%);
  background: -webkit-linear-gradient(top, rgba(255, 255, 255, 1) 0%, rgba(237, 237, 237, 1) 100%);
  background: linear-gradient(to bottom, rgba(255, 255, 255, 1) 0%, rgba(237, 237, 237, 1) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#ededed', GradientType=0);
}

.toolbar-background {
  background: #881119;
}

.toolbar-title {
  color: #fff;
}

.card-header {
  background: grey;
  color: white;
}

ion-card-content.card-content {
  padding: 20px !important;
}

//hack for modal wrapper!!!! must use with below code...
.modal-wrapper .ion-page.show-page {
  background: white !important;
  width: 100% !important;
}

@media (min-width: 1024px) {
  ion-menu {
    /*!* always show menu *!*/
    display: block;
  }
  ion-menu[type=overlay] {
    width: 312px;
  }
  .menu-inner {
    /* !* always show menu *!*/
    transform: translateX(0px) !important;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25) !important;
  }
  ion-nav.menu-content {
    /*!* always show menu content *!*/
    cursor: pointer;
    -ms-touch-action: manipulation;
    touch-action: manipulation;
    transform: translateX(304px) !important;
  }
  .ion-page {
    /*!* recalculate page contents width deducted by menu width *!*/
    width: calc(100% - 304px) !important;
  }
  button[menutoggle] {
    /*!* hide all non-working menu buttons *!*/
    display: none;
  }
  ion-menu[type=reveal] {
    z-index: 1;
    width: 312px;
  }
}
